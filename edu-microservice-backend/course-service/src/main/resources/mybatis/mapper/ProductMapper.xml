<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.command.api.data.ProductMapper">
	<resultMap id="BaseResultMap" type="app.command.api.data.ProductPo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
		<result column="category_id" jdbcType="BIGINT" property="categoryId" />
		<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
		<result column="image02" jdbcType="VARCHAR" property="image02" />
		<result column="image01" jdbcType="VARCHAR" property="image01" />
		<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="product_name" jdbcType="VARCHAR" property="productName" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="app.command.api.data.ProductPo">
		<result column="description" jdbcType="LONGVARCHAR" property="description" />
	</resultMap>
	<sql id="Base_Column_List">
		idis_deleted, category_id, updated_at, image02, image01, created_at, , product_name
	</sql>
	<sql id="Blob_Column_List">
		description
	</sql>
	<select id="findAll" resultMap="ResultMapWithBLOBs">
		select <include refid="Base_Column_List" />, <include refid="Blob_Column_List" /> from product
	</select>
	<select id="getById" resultMap="ResultMapWithBLOBs">
		select <include refid="Base_Column_List" />, <include refid="Blob_Column_List" /> from product where id = #{id, jdbcType=BIGINT}
	</select>
	<insert id="save" parameterType="app.command.api.data.ProductPo">
		insert into product (<include refid="Base_Column_List" />, <include refid="Blob_Column_List" />) 
		values (#{isDeleted, jdbcType=TINYINT}, #{categoryId, jdbcType=BIGINT}, #{updatedAt, jdbcType=TIMESTAMP}, #{image02, jdbcType=VARCHAR}, #{image01, jdbcType=VARCHAR}, #{description, jdbcType=LONGVARCHAR}, #{createdAt, jdbcType=TIMESTAMP}, #{id, jdbcType=BIGINT}, #{productName, jdbcType=VARCHAR})
	</insert>
	<update id="updateById" parameterType="app.command.api.data.ProductPo">
		update product
			<set>
				<if test="isDeleted != null">
					is_deleted = #{isDeleted, jdbcType=TINYINT}, 
				</if>
				<if test="categoryId != null">
					category_id = #{categoryId, jdbcType=BIGINT}, 
				</if>
				<if test="updatedAt != null">
					updated_at = #{updatedAt, jdbcType=TIMESTAMP}, 
				</if>
				<if test="image02 != null">
					image02 = #{image02, jdbcType=VARCHAR}, 
				</if>
				<if test="image01 != null">
					image01 = #{image01, jdbcType=VARCHAR}, 
				</if>
				<if test="description != null">
					description = #{description, jdbcType=LONGVARCHAR}, 
				</if>
				<if test="createdAt != null">
					created_at = #{createdAt, jdbcType=TIMESTAMP}, 
				</if>
				<if test="id != null">
					id = #{id, jdbcType=BIGINT}, 
				</if>
				<if test="productName != null">
					product_name = #{productName, jdbcType=VARCHAR}, 
				</if>

			</set> 
		where id = #{id, jdbcType=BIGINT}
	</update>
	<delete id="deleteById">
		delete from product where id = #{id, jdbcType=BIGINT}
	</delete>
	<select id="pagination" parameterType="app.command.api.data.Pagination" resultMap="ResultMapWithBLOBs">
		select <include refid="Base_Column_List" />, <include refid="Blob_Column_List" /> from product 
		order by id desc 
		limit #{offset, jdbcType=BIGINT} ,#{limit,jdbcType=INTEGER}
	</select>
	<select id="countAll" resultType="java.lang.Long">
		select count(*) from product
	</select>
</mapper>